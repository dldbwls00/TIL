item클래스 정의 : 다형성 배울 때 아이템 클래스를 추상 클래스로 정의, 그 밑에 푸드, 북 정의
		상위타입
하위클래스로 movie클래스와 book클래스: 필요한 멤버필드, 멤버메서드는 각각 정의
				공통적인 멤버가 있다면 아이템클래스로 올라가서 있는게 좋음
 

제목	감독	배우	장르	등급	개봉년도	포스터	별점	줄거리	감상평
제목	저자	출판사			출판년도	책이미지	별점	책소개	감상평

영화 정보추가
하나하나 스캐너로부터 저장된 값들을 대상으로 객체 생성해서 추가했었는데
한 화면에 있는 것들을 gettext,getvalue해서 가지고 온 후 매개변수로 넘겨서 movie 생성자 호출
movie 클래스의 설계는 화면에 보여지는 양식에 따라 각각의 필드가 필요함
그 필드들을 대상으로 생성자 만들면 됨

영화 상세보기
그렇게 추가된 항목들은 단순하게 벡터 등의 컬렉션에만 추가되는게아니라 리스트에도 추가돼야함
벡터에 추가된 것을 setListdata 해주면 됨
리스트의 항목을 선택하면 상세보기 기능이 되도록 구현
예전에는 리스트에 문자열을 집어넣고 문자열 항목이 텍스트필드에 찍히게 했음
리스트에 선택된 항목에 따라 벡터에서 해당값 가져와서(리스트에는 문자열만 저장하고), 인덱스로 가져오는 것

영화, 도서 컬렉션 따로 관리하는 게 아니라 아이템타입 컬렉션 하나를 관리하되
아이템이 무슨 타입이냐에따라 영화에서 보여줄 리스트, 도서에서 보여줄 리스트가 달라지도록 함
별도의 컬렉션으로 관리하게되면 수정,삭제시 불편함

검색하기: 제목과 별점으로 검색할 수 있도록
입력된 문자열을 포함하는 제목들이 검색되도록
점수 이상의 항목들이 모두 검색되도록

수정하기
선택하고 보여지는 항목에서 수정하기 버튼
파란색 사각형은 수정한 부분임
바뀐 결과를 바로 반영

삭제하기
삭제목적의 영화를 입력해둠
삭제 누르고 정말 삭제하시겠습니까 메시지 보고 돌아왔을 때 삭제돼있도록

파일 불러오기 저장하기
실습에서는 경로만 가져와서 찍고 실제 파일 io기능은 구현하지 않았지만 
이번에는 실제 기능까지 구현
벡터단위로 컬렉션을 대상으로 한 번 오브젝트 아웃풋 스트링 적고 오브젝트 인풋 스트링 읽어오고
오브젝트로 저장하고 오브젝트로 불러오는 형식
불러왔을 경우 해당 항목 리스트만 가져오는 게 아니라 선택하면 각각의 상세보기가 가능해야함 

시스템 종료